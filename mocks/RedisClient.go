// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"
import redis "github.com/gomodule/redigo/redis"

// RedisClient is an autogenerated mock type for the RedisClient type
type RedisClient struct {
	mock.Mock
}

// GetConn provides a mock function with given fields: host
func (_m *RedisClient) GetConn(host string) (redis.Conn, bool, error) {
	ret := _m.Called(host)

	var r0 redis.Conn
	if rf, ok := ret.Get(0).(func(string) redis.Conn); ok {
		r0 = rf(host)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redis.Conn)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(host)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(host)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetConnWithTimeout provides a mock function with given fields: host
func (_m *RedisClient) GetConnWithTimeout(host string) (redis.ConnWithTimeout, bool, error) {
	ret := _m.Called(host)

	var r0 redis.ConnWithTimeout
	if rf, ok := ret.Get(0).(func(string) redis.ConnWithTimeout); ok {
		r0 = rf(host)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redis.ConnWithTimeout)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(host)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(host)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetHosts provides a mock function with given fields:
func (_m *RedisClient) GetHosts() ([]string, []string) {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	var r1 []string
	if rf, ok := ret.Get(1).(func() []string); ok {
		r1 = rf()
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]string)
		}
	}

	return r0, r1
}

// GetMasterFromSlaveIP provides a mock function with given fields: slaveIP
func (_m *RedisClient) GetMasterFromSlaveIP(slaveIP string) (string, error) {
	ret := _m.Called(slaveIP)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(slaveIP)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(slaveIP)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMaxConn provides a mock function with given fields:
func (_m *RedisClient) GetMaxConn() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetNodeIPByKey provides a mock function with given fields: key, readOnly
func (_m *RedisClient) GetNodeIPByKey(key string, readOnly bool) (string, error) {
	ret := _m.Called(key, readOnly)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, bool) string); ok {
		r0 = rf(key, readOnly)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, bool) error); ok {
		r1 = rf(key, readOnly)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// HandleError provides a mock function with given fields: err
func (_m *RedisClient) HandleError(err error) {
	_m.Called(err)
}
