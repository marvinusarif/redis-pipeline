// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import cluster "github.com/redis-pipeline/cluster"
import mock "github.com/stretchr/testify/mock"
import redis "github.com/gomodule/redigo/redis"

// ClusterInterface is an autogenerated mock type for the ClusterInterface type
type ClusterInterface struct {
	mock.Mock
}

// updateClusterRegistry provides a mock function with given fields: redirectionError
func (_m *ClusterInterface) updateClusterRegistry(redirectionError *cluster.RedirError) {
	_m.Called(redirectionError)
}

// GetConnByAddr provides a mock function with given fields: addr
func (_m *ClusterInterface) GetConnByAddr(addr string) (redis.Conn, bool, error) {
	ret := _m.Called(addr)

	var r0 redis.Conn
	if rf, ok := ret.Get(0).(func(string) redis.Conn); ok {
		r0 = rf(addr)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(redis.Conn)
		}
	}

	var r1 bool
	if rf, ok := ret.Get(1).(func(string) bool); ok {
		r1 = rf(addr)
	} else {
		r1 = ret.Get(1).(bool)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(string) error); ok {
		r2 = rf(addr)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetMasterFromSlaveIP provides a mock function with given fields: slaveIP
func (_m *ClusterInterface) GetMasterFromSlaveIP(slaveIP string) (string, error) {
	ret := _m.Called(slaveIP)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(slaveIP)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(slaveIP)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMasterIPs provides a mock function with given fields:
func (_m *ClusterInterface) GetMasterIPs() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// GetNodeIPBySlot provides a mock function with given fields: slot, readOnly
func (_m *ClusterInterface) GetNodeIPBySlot(slot int, readOnly bool) (string, error) {
	ret := _m.Called(slot, readOnly)

	var r0 string
	if rf, ok := ret.Get(0).(func(int, bool) string); ok {
		r0 = rf(slot, readOnly)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int, bool) error); ok {
		r1 = rf(slot, readOnly)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetSlaveIPs provides a mock function with given fields:
func (_m *ClusterInterface) GetSlaveIPs() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// HandleError provides a mock function with given fields: err
func (_m *ClusterInterface) HandleError(err error) {
	_m.Called(err)
}

// Slot provides a mock function with given fields: key
func (_m *ClusterInterface) Slot(key string) int {
	ret := _m.Called(key)

	var r0 int
	if rf, ok := ret.Get(0).(func(string) int); ok {
		r0 = rf(key)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}
